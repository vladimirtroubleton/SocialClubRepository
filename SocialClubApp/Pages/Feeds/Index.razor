@page "/"
@inject SocialClubApp.Services.IAuthService authServ
@inject AuthenticationStateProvider authProvider
@inject NavigationManager uriHelper
@inject SocialClubApp.Services.UserService userServ
@inject SocialClubApp.Services.FilesService fileServ
@inject SocialClubApp.Services.FeedsService feedServ
@inject SocialClubApp.Services.Socials.SocialService socialServ
@using AuthDataLayer.Models
@using FeedsDataLayer.Models
@using SocialClubApp.StaticUtils
@using FeedsDataLayer.FeedViewModel

    <div class="container">
        @if (currentUser == null)
        {
            <div> Загрузка....</div>
        }
        else
        {
            <div class="container">
                <div class="row">
                    <a class="btn btn-outline-success text-center" href="/addFeed">Добавить новый материал</a>
                </div>
            </div>
            <hr/>
            @if (feedsView.Count() != 0)
            {
                <div class="container">
                    <div class="row">

                        <div class="col-12 mx-auto">
                            @if (feedModels != null)
                            {
                                @foreach (var feed in feedsView)
                                {

                            <div class="card">
       
                                <div class="card-body text-center">

                                    <div class="card-text"><p class="font-weight-bold">Заголовок</p></div>
                                    <div class="card-title">@feed.Title</div>
                                    <div class="card-text"><p class="font-weight-bold">Новость</p></div>
                                    <div class="card-title">@feed.Feed</div>
                                    <div class="card-text"><p class="font-weight-bold">Автор</p></div>
                                    <div class="card-title">@feed.Author</div>
                                    <div class="card-text"><p class="font-weight-bold">Прикрепленные материалы:</p></div>
                                </div>
                                <div class="col-10 mx-auto align-content-center">
                                    @foreach (var path in feed.PhotoPaths)
                                    {

                                        <img src="@path" class="newsPhoto" alt="Alternate Text" />

                                    }
                                </div>
                                <a href="/comments/@feed.Id.ToString()" class="btn btn-outline-dark">Комментарии</a>
                            </div>
                                    <hr />

                                }
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>


@code{
    FeedModel[] feeds;
    UserModel currentUser;

    private List<FeedModel> feedModels = new List<FeedModel>();

    private List<FeedViewModel> feedsView = new List<FeedViewModel>();

    private string[] friendsLogin;

    protected override async Task OnInitializedAsync()
    {

        var authState = await authProvider.GetAuthenticationStateAsync();
        currentUser = await userServ.GetCurrentUser(authState.User.Identity.Name);
        if (currentUser == null) { await authServ.Logout(); uriHelper.NavigateTo("/loginControl"); return; }
        friendsLogin = await socialServ.GetFriendsLoginArray(currentUser);
        foreach (var friendLogin in friendsLogin)
        {
            var feedsFriend = await feedServ.GetFeedsByUserLogin(friendLogin);
            feedModels.AddRange(feedsFriend);
        }


        await GetFeeds();


    }

    public async Task GetFeeds()
    {

        foreach (var feed in feedModels)
        {
            var files = await fileServ.GetConnectionsFileByFeed(feed.Id);
            feedsView.Add(new FeedViewModel
            {
                Id = feed.Id,
                Feed = feed.Feed,
                Author = feed.Author,
                Title = feed.Title,
                PhotoPaths = files.Select(x => x.Path).ToArray()
            });
        }
    }
}
