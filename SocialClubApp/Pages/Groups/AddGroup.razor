@page "/addGroup"
@using AuthDataLayer.Models
@using SocialClubApp.StaticUtils
@using FriendsAndSocailDataLayer.Models
@inject SocialClubApp.Services.IAuthService authServ
@inject AuthenticationStateProvider authProvider
@inject NavigationManager uriHelper
@inject SocialClubApp.Services.UserService userServ
@inject SocialClubApp.Services.FilesService fileServ
@inject SocialClubApp.Services.Socials.SocialService socialServ

    <div class="container">


        <div class="row">
            <div class="col-8 mx-auto text-center">
                <EditForm Model="@group" OnValidSubmit="CreateGroup">
                    <DataAnnotationsValidator />
                    <ValidationSummary Model="@group" />



                    <div class="form-group">
                        <label class="control-label">Введите имя группы</label>
                        <InputText @bind-Value="group.NameGroup" class="form-control" />
                        <ValidationMessage For="@(() => group.NameGroup)" />
                    </div>

                   
                    



                    <button class="ml-md-auto btn btn-outline-warning" type="submit">Добавить</button>





                </EditForm>
            </div>
        </div>
    </div>

@code {
    UserModel currentUser;
    GroupModel group = new GroupModel();

    protected override async Task OnInitializedAsync()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();
        currentUser = await userServ.GetCurrentUser(authState.User.Identity.Name);


    }

    public async Task CreateGroup()
    {
        group.CreatorLogin = currentUser.Login;
        await socialServ.CreateGroup(group);
        uriHelper.NavigateTo("/connectGroup");
    }
}
